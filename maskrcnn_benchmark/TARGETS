cpp_python_extension(
    name = "_C",
    srcs = glob(
        [
            "csrc/**/*.cpp",
            "csrc/**/*.cu",
        ],
        exclude = [
            "csrc/**/*.h"
        ]
    ),
    headers = glob(["csrc/**/*.h"]),
    base_module = "maskrcnn_benchmark",
    deps = [
        "//caffe2:torch_extension",
    ],
    preprocessor_flags = [
        "-DWITH_CUDA",
        "-DTORCH_EXTENSION_NAME=_C",
        '-D__CUDA_NO_HALF_OPERATORS__',
        '-D__CUDA_NO_HALF_CONVERSIONS__',
        '-D__CUDA_NO_HALF2_OPERATORS__',
        "-Iexperimental/deeplearning/vision/detectron2/maskrcnn_benchmark/csrc",
    ],
    nvcc_flags = ["-std=c++11"],
    external_deps = [
        ("cuda", None, "cuda-lazy"),
    ],
)



python_library(
    name = "modeling",
    srcs = glob(
        [
            "modeling/**/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        ":layers",
        "//caffe2:torch",
    ],
)


python_library(
    name = "config",
    srcs = glob(
        [
            "config/**/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        "//caffe2:torch",
        "//python/wheel/yacs:yacs",
    ],
)


python_library(
    name = "structures",
    srcs = glob(
        [
            "structures/**/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        "//caffe2:torch",
    ],
)


python_library(
    name = "utils",
    srcs = glob(
        [
            "utils/**/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        "//caffe2:torch",
        "//pytorch/vision:torchvision",
    ],
)


python_library(
    name = "layers",
    srcs = glob(
        [
            "layers/**/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        ":_C",
        "//caffe2:torch",
        "//pytorch/vision:torchvision",
    ],
)


python_library(
    name = "engine",
    srcs = glob(
        [
            "engine/**/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        ":structures",
        ":utils",
        "//caffe2:torch",
    ],
)

python_library(
    name = "data",
    srcs = glob(
        [
            "data/**/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        "//deeplearning/projects/cocoApi/PythonAPI:pycocotools",
        "//caffe2:torch",
        "//pytorch/vision:torchvision",
    ],
)

python_library(
    name = "solver",
    srcs = glob(
        [
            "solver/*.py",
        ],
    ),
    base_module = "maskrcnn_benchmark",
    deps = [
        "//caffe2:torch",
    ],
)

python_library(
    name = "maskrcnn_benchmark",
    srcs = glob(
        [
            "**/*.py",
        ],
    ),
    deps = [
        ":_C",
        ":config",
        ":data",
        ":engine",
        ":layers",
        ":modeling",
        ":solver",
        ":structures",
        ":utils",
        "//deeplearning/projects/cocoApi/PythonAPI:pycocotools",
        "//caffe2:torch",
    ],
)
